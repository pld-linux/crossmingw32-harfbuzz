--- harfbuzz-1.1.3/src/hb-uniscribe.cc.orig	2016-01-06 13:29:29.337284954 +0100
+++ harfbuzz-1.1.3/src/hb-uniscribe.cc	2016-01-12 17:19:29.371811035 +0100
@@ -42,6 +42,9 @@
 #define HB_DEBUG_UNISCRIBE (HB_DEBUG+0)
 #endif
 
+#ifndef E_NOT_SUFFICIENT_BUFFER
+#define E_NOT_SUFFICIENT_BUFFER ((HRESULT)0x8007007A)
+#endif
 
 static inline uint16_t hb_uint16_swap (const uint16_t v)
 { return (v >> 8) | (v << 8); }
--- harfbuzz-1.8.5/src/hb-atomic-private.hh.orig	2018-08-02 20:46:35.868562237 +0200
+++ harfbuzz-1.8.5/src/hb-atomic-private.hh	2018-08-02 21:02:03.521884980 +0200
@@ -104,7 +104,7 @@
 typedef LONG hb_atomic_int_impl_t;
 #define hb_atomic_int_impl_add(AI, V)		InterlockedExchangeAdd ((AI), (V))
 
-#define hb_atomic_ptr_impl_cmpexch(P,O,N)	(InterlockedCompareExchangePointer ((void **) (P), (void *) (N), (void *) (O)) == (void *) (O))
+#define hb_atomic_ptr_impl_cmpexch(P,O,N)	(((void*)InterlockedCompareExchangePointer ((long volatile*)(void **) (P), (long)(void *) (N), (long)(void *) (O)) == (void *) (O))
 
 
 #elif !defined(HB_NO_MT) && defined(HAVE_INTEL_ATOMIC_PRIMITIVES)
--- harfbuzz-1.8.0/src/hb-private.hh.orig	2018-06-08 22:23:00.670122650 +0200
+++ harfbuzz-1.8.0/src/hb-private.hh	2018-06-08 22:28:25.200118946 +0200
@@ -51,7 +51,7 @@
 #include <stdio.h>
 #include <stdarg.h>
 
-#if (defined(_MSC_VER) && _MSC_VER >= 1500) || defined(__MINGW32__)
+#if (defined(_MSC_VER) && _MSC_VER >= 1500)
 #include <intrin.h>
 #endif
 
--- harfbuzz-1.8.5/src/hb-dsalgs.hh.orig	2018-07-17 16:29:54.000000000 +0200
+++ harfbuzz-1.8.5/src/hb-dsalgs.hh	2018-08-02 21:15:43.988542278 +0200
@@ -98,7 +98,7 @@
     return sizeof (unsigned long long) * 8 - __builtin_clzll (v);
 #endif
 
-#if (defined(_MSC_VER) && _MSC_VER >= 1500) || defined(__MINGW32__)
+#if (defined(_MSC_VER) && _MSC_VER >= 1500)
   if (sizeof (T) <= sizeof (unsigned int))
   {
     unsigned long where;
@@ -172,7 +172,7 @@
     return __builtin_ctzll (v);
 #endif
 
-#if (defined(_MSC_VER) && _MSC_VER >= 1500) || defined(__MINGW32__)
+#if (defined(_MSC_VER) && _MSC_VER >= 1500)
   if (sizeof (T) <= sizeof (unsigned int))
   {
     unsigned long where;
